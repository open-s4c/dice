name: dice build and test
on: [push]
env:
  REGISTRY: ghcr.io

jobs:
  test-linux:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
        cfg:
        - cc: gcc
          cxx: g++
        - cc: clang
          cxx: clang++
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure
        run: cmake -S. -Bbuild
             -DCMAKE_INSTALL_PREFIX=/tmp/target
             -DCMAKE_C_COMPILER=${{ matrix.cfg.cc }}
             -DCMAKE_CXX_COMPILER=${{ matrix.cfg.cxx }}
      - name: Build
        run: cmake --build build
      - name: Test
        run: ctest --test-dir build --output-on-failure
      - name: Install
        run: cmake --install build

  test-alpine:
    runs-on: ubuntu-latest
    container: ghcr.io/open-s4c/dice/alpine-ci:latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure
        run: cmake -S. -Bbuild
             -DCMAKE_INSTALL_PREFIX=/tmp/target
      - name: Build
        run: cmake --build build
      - name: Test
        run: ctest --test-dir build --output-on-failure
      - name: Install
        run: cmake --install build

  test-macos:
    if: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure
        run: cmake -S. -Bbuild
             -DCMAKE_INSTALL_PREFIX=/tmp/target
      - name: Build
        run: cmake --build build
      - name: Test
        run: ctest --test-dir build --output-on-failure
      - name: Install
        run: cmake --install build

  test-netbsd:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure, Build, Install
        id: test
        uses: vmactions/netbsd-vm@v1
        with:
          release: "10.1"
          usesh: true
          prepare: /usr/sbin/pkg_add cmake
          run: |
              rm -rf /tmp/target
              cmake -S. -Bbuild -DCMAKE_INSTALL_PREFIX=/tmp/target
              cmake --build build
              ctest --test-dir build --output-on-failure
              cmake --install build

  test-qemu:
    strategy:
      matrix:
        build_type: [ "Debug", "Release" ]
        toolchain: [ "arm64" ]
    runs-on: ubuntu-latest
    container: ghcr.io/open-s4c/dice/qemu-ci:latest
    steps:
      - name: Check out to run with the tests
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure
        run: cmake -S . -Bbuild
             -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}"
             -DCMAKE_TOOLCHAIN_FILE=".github/toolchains/${{ matrix.toolchain }}.cmake"
      - name: Build
        run: cmake --build build
      - name: Test
        run: ctest --test-dir build --output-on-failure
